package com.competentum.demo.javacc.compiler;
import java.util.Map;

/* Generated By:JJTree: Do not edit this line. ASTNEQNode.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public class ASTNEQNode extends SimpleNode {
	public ASTNEQNode(int id) {
		super(id);
	}

	public ASTNEQNode(ExampleCompiler p, int id) {
		super(p, id);
	}

	@Override
	public AlgValue eval(Map<String, AlgValue> symbolTable)throws InterpreterException {
		if(jjtGetNumChildren() < 1)
			throw new InterpreterException();
		AlgValue variable = getChild(0).eval(symbolTable);
		for (int i = 1; i < jjtGetNumChildren(); i++)
			variable = ne(variable, getChild(i).eval(symbolTable));

		return variable;
	}
	
	private AlgValue ne(AlgValue a, AlgValue b) throws InterpreterException {
		if(a == null && b != null || a != null && b == null)
			return new AlgValue(Type.BOOL, true);
		if(a == null && b == null)
			return new AlgValue(Type.BOOL, false);
		if(a.getType() != b.getType())
			return new AlgValue(Type.BOOL, true);
		if(a.getValue() == null)
			return new AlgValue(Type.BOOL, b.getValue() != null);
		return new AlgValue(Type.BOOL, !a.getValue().equals(b.getValue()));
		
	}
}
/*
 * JavaCC - OriginalChecksum=c390f2f9096bd7570dc4916b6051c8ef (do not edit this
 * line)
 */
