package com.competentum.demo.javacc.compiler;
import java.util.Map;

/* Generated By:JJTree: Do not edit this line. ASTAssignment.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public class ASTAssignment extends SimpleNode {

	public ASTAssignment(int id) {
		super(id);
	}

	public ASTAssignment(ExampleCompiler p, int id) {
		super(p, id);
	}

	@Override
	public AlgValue eval(Map<String, AlgValue> symbolTable)
			throws InterpreterException {
		if (jjtGetNumChildren() != 2)
			throw new InterpreterException();
		ASTIdentifier id = (ASTIdentifier) getChild(0);
		if (!symbolTable.containsKey(id.getName()))
			throw new InterpreterException();
		AlgValue var = symbolTable.get(id.getName());
		AlgValue value = getChild(1).eval(symbolTable);
		if (var.getType() == Type.STRING) {
			if (value.getValue() != null)
				var.setValue(value.getValue().toString());
			else
				var.setValue(null);
		} else if (var.getType() == value.getType())
			var.setValue(value.getValue());
		else
			throw new InterpreterException();
		symbolTable.put(id.getName(), var);
		return symbolTable.get(id.getName());
	}

}
/*
 * JavaCC - OriginalChecksum=46d690f83d2f61ef734ee757d85f18e3 (do not edit this
 * line)
 */
